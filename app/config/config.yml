imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }
#Chapitre 2. Votre premier backend
easy_admin:
    list:
        max_results: 30
    show:
        max_results: 20

    entities:
        Category:
            class: AppBundle\Entity\Category
            help: 'Bienvenue'
            label: 'Catégories'
            list:
                max_results: 10 # affiche 10 résultat sur la page catégories
                help: 'Vous êtes sur la page de gestion catérorie'
                title: 'Liste des catégories'
                fields: ['title']
            show:
                max_results: 10
        User:
            class: AppBundle\Entity\User
            label: 'Utilisateurs'
            list:
                max_results: 10
                help: 'Vous êtes sur la page de gestion utilisateur'
                title: 'Liste des utilisateurs'
#                premiere Facon d'afficher les noms dans les colonnes
                fields: ['name',{ property: 'email', label: 'Contact',type: 'email' }]
                search:
                    fields: ['name', 'user.email']

        Product:
            class: AppBundle\Entity\Product
            label: 'Produits'
            list:
                max_results: 10
                help: 'Vous êtes sur la page de gestion produits'
                title: 'Liste des produits'
#                dexieme Facon d'afficher les noms dans les colonnes
                fields:
                    - id
                    - { property: 'price' ,label:'Prix' }
                    - { property: 'enabled' ,label:'Activation', type:'toggle' } # permet d'afficher un bouton yes /no
    site_name: 'Delice <em style="font-size: 80%;">Frite.</em>'
